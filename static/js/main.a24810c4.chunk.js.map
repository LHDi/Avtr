{"version":3,"sources":["components/ColorPicker/ColorPicker.module.css","components/Preview/preview.module.css","components/Container/container.module.css","components/Piece/Piece.module.css","utils/createColoredSkinSvg.js","utils/createColoredBackgroundSvg.js","components/Preview/Preview.js","components/ShapePicker.js","components/ColorPicker/ColorPicker.js","components/Piece/Piece.js","utils/config.js","components/Container/Container.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CreateColoredSkinSvg","color","fill","transform","d","style","mixBlendMode","fillOpacity","GetSvgFromUrl","url","useState","Svg","setSvg","useEffect","fetch","then","res","text","svg","dangerouslySetInnerHTML","Preview","useRef","useContext","AvatarStore","avatar","Skin","Background","parts","old","i","uid","hasOwnProperty","shape","push","key","index","className","Styles","preview","onClick","canvas","document","createElement","width","height","ctx","getContext","data","XMLSerializer","serializeToString","current","DOMURL","window","URL","webkitURL","img","Image","svgBlob","Blob","type","createObjectURL","onload","drawImage","revokeObjectURL","imgURI","evt","MouseEvent","view","bubbles","cancelable","a","setAttribute","dispatchEvent","triggerDownload","toDataURL","replace","src","ref","viewBox","Style","container","background","display","justifyContent","borderRadius","Shape","total","hidden","position","left","top","Math","tan","transition","opacity","setShapes","shapes","selected","map","s","length","ShapePicker","select","selectedShape","selectedShapeIndex","indexOf","setSelected","lineHeight","verticalAlign","cursor","e","prev","size","perspective","overflow","transformStyle","next","Pickr","handleClick","pickr","title","alt","padding","boxSizing","createPickrs","colors","ColorPicker","setColor","picker","defaultProps","Piece","config","setAvatar","newShape","newColor","textAlign","selectedColor","dispach","onColorChange","onShapeChange","initialConfig","Body","Eyes","FacialHair","Hair","Mouth","Nose","createContext","Container","Provider","value","flexWrap","Configs","console","log","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a24810c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"picker\":\"ColorPicker_picker__3lquy\",\"pickr\":\"ColorPicker_pickr__3ejf5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preview\":\"preview_preview__1sboy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__3TiUU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Piece_container__1fvft\"};","import React from 'react';\n\nconst CreateColoredSkinSvg = ({color}) => (\n\t<g fill=\"none\" transform=\"translate(14 13)\">\n\t\t<path d=\"m23 33.0807424v5.9192576c0 2.7614237-2.2385763 5-5 5s-5-2.2385763-5-5v-5.9192576c-4.03776277-1.5443264-7.17755008-4.9044416-8.42044769-9.0814314-.02646239.0004587-.05298045.000689-.07955231.000689-2.48528137 0-4.5-2.0147186-4.5-4.5 0-2.3162768 1.75002477-4.2238135 4-4.4725356v-1.0274644c0-7.7319865 6.2680135-14 14-14s14 6.2680135 14 14v1.0274644c2.2499752.2487221 4 2.1562588 4 4.4725356 0 2.4852814-2.0147186 4.5-4.5 4.5-.0265719 0-.0530899-.0002303-.0795523-.000689-1.2428976 4.1769898-4.3826849 7.537105-8.4204477 9.0814314z\" fill={color} />\n\t\t<path style={{mixBlendMode: 'overlay'}} d=\"m18 0c7.7319865 0 14 6.2680135 14 14v6c0 7.7319865-6.2680135 14-14 14s-14-6.2680135-14-14v-6c0-7.7319865 6.2680135-14 14-14z\" fill=\"#FFF\" fillOpacity=\"0.3\" />\n\t</g>\n);\n\nexport default CreateColoredSkinSvg;","import React from 'react';\n\nconst CreateColoredSkinSvg = ({color}) => (\n\t<path d=\"m0 0h64v64h-64z\" fill={color}/>\n);\n\nexport default CreateColoredSkinSvg;","import React, { useContext, useState, useEffect, useRef } from 'react';\nimport Styles from './preview.module.css';\nimport { AvatarStore } from '../Container/Container';\nimport CreateColoredSkinSvg from '../../utils/createColoredSkinSvg';\nimport CreateColoredBackgroundSvg from '../../utils/createColoredBackgroundSvg';\n\nconst GetSvgFromUrl = ({url}) => {\n\tlet [Svg, setSvg] = useState('');\n\tuseEffect(() => {\n\t\tfetch(url)\n\t\t\t.then(res => res.text())\n\t\t\t.then(svg => {\n\t\t\t\tsetSvg(svg);\t\t\t\t\n\t\t\t});\n\t});\n\treturn <svg dangerouslySetInnerHTML={{'__html': Svg}}/>;\n};\nexport default function Preview() {\n\tconst Svg = useRef(null);\n\tconst {avatar, avatar: {Skin, Background}} = useContext(AvatarStore);\n\tconst parts = [], old = {};\n\tlet i = 0;\n\tfor (const uid in avatar) {\n\t\tif (avatar.hasOwnProperty(uid)) {\t\t\t\n\t\t\tif(!!avatar[uid].shape ) {\n\t\t\t\tparts.push(<GetSvgFromUrl key={uid + avatar[uid].shape} url={'avatars/' + uid + '/' + avatar[uid].shape + '.svg'}/>);\n\t\t\t\told[uid] = {shape: avatar[uid].shape, index: i++};\n\t\t\t}\n\t\t}\n\t}\n\tconst triggerDownload = (imgURI) => {\n\t\tvar evt = new MouseEvent('click', {\n\t\t\tview: window,\n\t\t\tbubbles: false,\n\t\t\tcancelable: true\n\t\t});\n\t\n\t\tvar a = document.createElement('a');\n\t\ta.setAttribute('download', 'avtr.png');\n\t\ta.setAttribute('href', imgURI);\n\t\ta.setAttribute('target', '_blank');\n\t\n\t\ta.dispatchEvent(evt);\n\t};\n\tconst handleClick = () => {\t\t\n\t\tvar canvas = document.createElement('canvas');\n\t\tcanvas.width = 150;\n\t\tcanvas.height = 150;\n\n\t\tvar ctx = canvas.getContext('2d');\n\t\tvar data = (new XMLSerializer()).serializeToString(Svg.current);\n\t\tvar DOMURL = window.URL || window.webkitURL || window;\n\t\n\t\tvar img = new Image();\n\t\tvar svgBlob = new Blob([data], {type: 'image/svg+xml;charset=utf-8'});\n\t\tvar url = DOMURL.createObjectURL(svgBlob);\n\t\t\n\t\timg.onload = function () {\t\t\t\n\t\t\tctx.drawImage(img, 0, 0);\n\t\t\tDOMURL.revokeObjectURL(url);\n\t\n\t\t\tvar imgURI = canvas\n\t\t\t\t.toDataURL('image/png')\n\t\t\t\t.replace('image/png', 'image/octet-stream');\n\t\t\t\n\t\t\ttriggerDownload(imgURI);\n\t\t};\n\t\timg.src = url;\n\t};\n\treturn (\n\t\t<div className={Styles.preview} onClick={handleClick}>\n\t\t\t<svg ref={Svg} viewBox=\"0 0 64 64\">\n\t\t\t\t<svg>\n\t\t\t\t\t<CreateColoredBackgroundSvg color={Background.color} />\n\t\t\t\t\t<CreateColoredSkinSvg color={Skin.color}/>\n\t\t\t\t</svg>\n\t\t\t\t{parts}\n\t\t\t</svg>\n\t\t</div>\n\t);\n}\n","import React, { useState, useEffect } from 'react';\nimport { FaAngleLeft, FaAngleRight } from 'react-icons/fa';\n\nconst Style = {\n\tcontainer: {\n\t\tbackground: '#fff',\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t\tborderRadius: '3px'\n\t}\n};\n// eslint-disable-next-line react/prop-types\nconst Shape = ({index, total, hidden, src, uid}) => {\n\tconst [svg, setSvg] = useState('');\n\tuseEffect(() => {\n\t\tfetch(src)\n\t\t\t.then(res => res.text())\n\t\t\t.then(svg => {\n\t\t\t\tsetSvg(svg);\n\t\t\t});\n\t});\n\t\n\treturn (\n\t\t<span style={{\n\t\t\tposition: 'absolute',\n\t\t\twidth: '64px',\n\t\t\theight: '64px',\n\t\t\tleft: '0px',\n\t\t\ttop: '0px',\n\t\t\ttransform: `rotateY(${(360/total)*index}deg) translateZ(${64/(2*Math.tan(360/total))}px)`,\n\t\t\ttransition: 'all .5s',\n\t\t\topacity: hidden? 0:1\n\n\t\t}} dangerouslySetInnerHTML={{'__html': svg}}>\n\t\t\t\t\n\t\t</span>\n\t);\n};\nconst setShapes = (shapes, selected, uid) => (\n\t//shapes[selected]\n\tshapes.map((s, i) =>(<Shape src={'avatars/' + uid + '/' + s + '.svg'} uid={uid} hidden={i!==selected} index={i} total={shapes.length} key={i}/>))\n);\n\n// eslint-disable-next-line react/prop-types\nexport default function ShapePicker({shapes, select, selectedShape, uid}) {\n\t// eslint-disable-next-line react/prop-types\n\tconst selectedShapeIndex =  shapes.indexOf(selectedShape)!==-1?shapes.indexOf(selectedShape):0;\n\tconst [selected, setSelected] = useState(selectedShapeIndex);\n\tconst next = (e) => {\n\t\tsetSelected((s) => {\n\t\t\tconst next = (s+1)%shapes.length;\n\t\t\tselect(shapes[next]);\n\t\t\treturn next;\n\t\t});\n\t};\n\tconst prev = (e) => {\n\t\tsetSelected((s) => {\n\t\t\tconst prev = (s-1+shapes.length)%shapes.length;\n\t\t\tselect(shapes[prev]);\n\t\t\treturn prev;\n\t\t});\n\t};\n\treturn (\n\t\t<div style={Style.container}>\n\t\t\t<span style={{height: '64px', lineHeight: '64px'}}>\n\t\t\t\t<FaAngleLeft style={{verticalAlign: 'middle'}} cursor=\"pointer\" onClick={prev} color=\"rgba(122, 137, 151, 0.8)\" size=\"1.5em\"/>\n\t\t\t</span>\n\t\t\t<div style={{\n\t\t\t\twidth: '64px',\n\t\t\t\theight: '64px',\n\t\t\t\tposition: 'relative',\n\t\t\t\tperspective: '1000px',\n\t\t\t\toverflow: 'hidden'\n\t\t\t}}>\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\ttransformStyle: 'preserve-3d',\n\t\t\t\t\t\ttransition: 'all .3s',\n\t\t\t\t\t\ttransform: 'translateZ(-288px) rotateY(' + selected / shapes.length * -360 + 'deg)'\n\t\t\t\t\t}}>\n\t\t\t\t\t{setShapes(shapes, selected, uid)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<span style={{height: '64px', lineHeight: '64px'}}>\n\t\t\t\t<FaAngleRight style={{verticalAlign: 'middle'}} cursor=\"pointer\" onClick={next} color=\"rgba(122, 137, 151, 0.8)\" height={80} size=\"1.5em\"/>\n\t\t\t</span>\n\t\t</div>\n\t);\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Style from './ColorPicker.module.css';\n\n// eslint-disable-next-line react/prop-types\nconst Pickr = ({color, selected, handleClick}) => {\n\n\tconst onClick = () => handleClick(color);\n\treturn(\n\t\t<span className={Style.pickr}>\n\t\t\t<span\n\t\t\t\tonClick={onClick}\n\t\t\t\ttitle={color}\n\t\t\t\tstyle={{\n\t\t\t\t\tbackground: color,\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\tborderRadius: '3px',\n\t\t\t\t\ttop: '50%',\n\t\t\t\t\tleft: '50%',\n\t\t\t\t\ttransform: 'translate(-50%, -50%)',\n\t\t\t\t\twidth: '85%',\n\t\t\t\t\theight: '85%'\n\t\t\t\t}}>\n\t\t\t\t{selected && <img\n\t\t\t\t\tsrc=\"/img/check-mark.svg\"\n\t\t\t\t\talt=\"checked\"\n\t\t\t\t\tstyle={{width: '100%', height: '100%', padding: '3px', boxSizing: 'border-box'}}\n\t\t\t\t/>}\n\t\t\t</span>\n\t\t</span>\n\t);\n};\nconst createPickrs = (selected, colors, handleClick) => {\n\n\treturn(colors.map((color, i) => (\n\t\t<Pickr key={i} handleClick={handleClick} selected={(selected === color || selected === i)} color={color}/>\n\t)));\n};\nexport default function ColorPicker({colors, selected, select}) {\n\tconst [color, setColor] = useState(selected);\n\tconst handleClick = (i) => {\n\t\tsetColor(i);\n\t\tselect(i);\n\t};\n\treturn (\n\t\t<span style={{display: 'inline-block', background: '#fff', borderRadius: '3px'}}>\n\t\t\t<div className={Style.picker}>\n\t\t\t\t{createPickrs(color, colors, handleClick)}\n\t\t\t</div>\n\t\t</span>\n\t);\n}\n\nColorPicker.propTypes = {\n\tselected: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\tcolors: PropTypes.arrayOf(PropTypes.string).isRequired,\n\tselect: PropTypes.func.isRequired\n};\n\nColorPicker.defaultProps = {\n\tselected: 0\n};","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport ShapePicker from '../ShapePicker';\nimport ColorPicker from '../ColorPicker/ColorPicker';\nimport Style from './Piece.module.css';\nimport { AvatarStore } from '../Container/Container';\n\nconst Piece = ({config}) => {\n\tconst {avatar, setAvatar} = useContext(AvatarStore);\n\tconst {\n\t\tuid,\n\t\tshapes,\n\t\tcolors,\n\t} = config;\n\tconst onShapeChange = (newShape) => {\n\t\tsetAvatar({...avatar, [uid]: {...avatar[uid], shape: newShape}});\n\t};\n\tconst onColorChange = (newColor) => {\n\t\tsetAvatar({...avatar, [uid]: {...avatar[uid], color: newColor}});\n\t};\n\treturn (\n\t\t<div className={Style.container}>\n\t\t\t{shapes&& <ShapePicker uid={uid} selectedShape={avatar[uid].shape || 0} shapes={shapes||[]} select={onShapeChange||(()=>{})}/>}\n\t\t\t{colors&& <ColorPicker uid={uid} selected={avatar[uid].color} colors={colors||[]} select={onColorChange||(()=>{})}/>}\n\t\t\t<h5\n\t\t\t\tstyle={{display: 'block', textAlign: 'center'}}\n\t\t\t>\n\t\t\t\t{uid}\n\t\t\t</h5>\n\t\t</div>\n\t);\n};\n\nPiece.propTypes = {\n\tconfig: PropTypes.shape({\n\t\tuid: PropTypes.string.isRequired,\n\t\tshapes: PropTypes.arrayOf(PropTypes.string),\n\t\tcolors: PropTypes.arrayOf(PropTypes.string),\n\t\tonShapeChange: PropTypes.func,\n\t\tonColorChange: PropTypes.func,\n\t\tselectedColor: PropTypes.any,\n\t\tselectedShape: PropTypes.any\n\t}),\n};\n\nPiece.defaultProps = {\n\tconfig: {\n\t\tselectedColor: 0,\n\t\tselectedShape: 0\n\t}\n};\n\nexport default Piece;\n","export default (dispach) => ([\n\t{\n\t\tuid: 'Background',\n\t\tcolors: [\n\t\t\t'#93a7ff',\n\t\t\t'#070b28',\n\t\t\t'#a9e775',\n\t\t\t'#f8fbff',\n\t\t\t'#ff7a9a',\n\t\t\t'#b379f7',\n\t\t\t'#ff6674',\n\t\t\t'#89e6e4',\n\t\t\t'#fff',\n\t\t\t'#ffcc65'\n\t\t],\n\t\tonColorChange: (color) => dispach('change color to ' + color),\n\t},\n\t{\n\t\tuid: 'Body',\n\t\tshapes: [\n\t\t\t'checkered',\n\t\t\t'round',\n\t\t\t'small',\n\t\t\t'square'\n\t\t],\n\t\tonShapeChange: (color) => dispach('change color to ' + color),\n\t},\n\t{\n\t\tuid: 'Eyes',\n\t\tshapes: [\n\t\t\t'glasses',\n\t\t\t'happy',\n\t\t\t'open',\n\t\t\t'sleepy',\n\t\t\t'sunglasses',\n\t\t\t'wink'\n\t\t],\n\t\tonShapeChange: (color) => dispach('change color to ' + color),\n\t},\n\t{\n\t\tuid: 'FacialHair',\n\t\tshapes: [\n\t\t\t'none',\n\t\t\t'goatee',\n\t\t\t'shadow',\n\t\t\t'soulpatch',\n\t\t\t'walrus',\n\t\t\t'mustacheBlack',\n\t\t\t'mustacheBlonde',\n\t\t\t'mustacheBrunette',\n\t\t\t'mustacheCopper',\n\t\t\t'mustacheGrey',\n\t\t\t'mustachePink',\n\t\t\t'mustacheRed',\n\t\t\t'mustacheTeal'\n\t\t],\n\t\tonShapeChange: (color) => dispach('change color to ' + color),\n\t},\n\t{\n\t\tuid: 'Hair',\n\t\tshapes: [\n\t\t\t'bald',\n\t\t\t'balding',\n\t\t\t'bigcurls',\n\t\t\t'bobbangs',\n\t\t\t'bobcut',\n\t\t\t'buncurls-black',\n\t\t\t'buzzcut',\n\t\t\t'curlybun',\n\t\t\t'curlyhightop',\n\t\t\t'extralong',\n\t\t\t'long',\n\t\t\t'pigtails',\n\t\t\t'shortcombover',\n\t\t\t'beanie',\n\t\t\t'bunundercut',\n\t\t\t'buzz',\n\t\t\t'fade',\n\t\t\t'hat',\n\t\t\t'mohawk',\n\t\t\t'shortcomboverchops',\n\t\t\t'sidebuzz',\n\t\t\t'straightbun'\n\t\t],\n\t\tonShapeChange: (color) => dispach('change color to ' + color),\n\t},\n\t{\n\t\tuid: 'Mouth',\n\t\tshapes: [\n\t\t\t'frown',\n\t\t\t'lips',\n\t\t\t'pacifier',\n\t\t\t'smile',\n\t\t\t'smirk',\n\t\t\t'surprise'\n\t\t],\n\t\tonShapeChange: (color) => dispach('change color to ' + color),\n\t},\n\t{\n\t\tuid: 'Nose',\n\t\tshapes: [\n\t\t\t'mediumround',\n\t\t\t'smallround',\n\t\t\t'wrinkles'\n\t\t],\n\t\tonShapeChange: (color) => dispach('change color to ' + color),\n\t},\n\t{\n\t\tuid: 'Skin',\n\t\tcolors: [\n\t\t\t'#f2ad9b',\n\t\t\t'#f3967e',\n\t\t\t'#e4a070',\n\t\t\t'#b16a5b',\n\t\t\t'#92594b',\n\t\t\t'#623d36',\n\t\t],\n\t\tonShapeChange: (color) => dispach('change color to ' + color),\n\t}\n]);","import React , { createContext, useState } from 'react';\nimport Preview from '../Preview/Preview';\nimport Styles from './container.module.css';\nimport Piece from '../Piece/Piece';\nimport Configs from '../../utils/config';\n\nconst initialConfig = {\n\tBackground: {\n\t\tcolor: '#93a7ff',\n\t},\n\tBody: {\n\t\tshape: 'checkered',\n\t},\n\tEyes: {\n\t\tshape: 'glasses',\n\t},\n\tFacialHair: {\n\t\tshape: 'goatee',\n\t},\n\tHair: {\n\t\tshape: 'bald',\n\t},\n\tMouth: {\n\t\tshape: 'frown',\n\t},\n\tNose: {\n\t\tshape: 'mediumround',\n\t},\n\tSkin: {\n\t\tcolor: '#f2ad9b',\n\t},\n};\nexport const AvatarStore = createContext(initialConfig);\n\nfunction Container() {\n\tconst [avatar, setAvatar] = useState(initialConfig);\n\t\n\treturn (\n\t\t<AvatarStore.Provider value={{avatar, setAvatar}} >\n\t\t\t<div className={Styles.container}>\n\t\t\t\t<Preview />\n\t\t\t\t<div style={{display: 'flex', flexWrap: 'wrap', justifyContent: 'space-evenly'}}>\n\t\t\t\t\t{\n\t\t\t\t\t\tConfigs((i) => console.log(i)).map(i => <Piece config={i} key={i.uid}/>)\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</AvatarStore.Provider>\n\t);\n}\n\nexport default Container;\n","import React from 'react';\nimport './App.css';\nimport Container from './components/Container/Container';\n\nfunction App() {\n\treturn (\n\t\t<Container />\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}